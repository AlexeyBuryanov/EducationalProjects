#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InsuranceAgency.LINQtoSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InsuranceContractsAB")]
	public partial class InsuranceContractsABDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertAgents(Agents instance);
    partial void UpdateAgents(Agents instance);
    partial void DeleteAgents(Agents instance);
    partial void InsertCanceledContracts(CanceledContracts instance);
    partial void UpdateCanceledContracts(CanceledContracts instance);
    partial void DeleteCanceledContracts(CanceledContracts instance);
    partial void InsertClientage(Clientage instance);
    partial void UpdateClientage(Clientage instance);
    partial void DeleteClientage(Clientage instance);
    partial void InsertContracts(Contracts instance);
    partial void UpdateContracts(Contracts instance);
    partial void DeleteContracts(Contracts instance);
    partial void InsertContractsLog(ContractsLog instance);
    partial void UpdateContractsLog(ContractsLog instance);
    partial void DeleteContractsLog(ContractsLog instance);
    partial void InsertTypesInsurance(TypesInsurance instance);
    partial void UpdateTypesInsurance(TypesInsurance instance);
    partial void DeleteTypesInsurance(TypesInsurance instance);
    #endregion
		
		public InsuranceContractsABDataContext() : 
				base(global::InsuranceAgency.Properties.Settings.Default.InsuranceContractsABConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public InsuranceContractsABDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InsuranceContractsABDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InsuranceContractsABDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InsuranceContractsABDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agents> Agents
		{
			get
			{
				return this.GetTable<Agents>();
			}
		}
		
		public System.Data.Linq.Table<CanceledContracts> CanceledContracts
		{
			get
			{
				return this.GetTable<CanceledContracts>();
			}
		}
		
		public System.Data.Linq.Table<Clientage> Clientage
		{
			get
			{
				return this.GetTable<Clientage>();
			}
		}
		
		public System.Data.Linq.Table<Contracts> Contracts
		{
			get
			{
				return this.GetTable<Contracts>();
			}
		}
		
		public System.Data.Linq.Table<ContractsLog> ContractsLog
		{
			get
			{
				return this.GetTable<ContractsLog>();
			}
		}
		
		public System.Data.Linq.Table<TypesInsurance> TypesInsurance
		{
			get
			{
				return this.GetTable<TypesInsurance>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request01")]
		public ISingleResult<Clientage> sp_Request01()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Clientage>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request02")]
		public ISingleResult<sp_Request02Result> sp_Request02()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_Request02Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request03")]
		public ISingleResult<sp_Request03Result> sp_Request03()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_Request03Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request04")]
		public ISingleResult<sp_Request04Result> sp_Request04([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string secondName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), secondName);
			return ((ISingleResult<sp_Request04Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request05")]
		public ISingleResult<sp_Request05Result> sp_Request05([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
			return ((ISingleResult<sp_Request05Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request06")]
		public ISingleResult<sp_Request06Result> sp_Request06()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_Request06Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request07")]
		public ISingleResult<sp_Request07Result> sp_Request07()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_Request07Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request08")]
		public ISingleResult<sp_Request08Result> sp_Request08()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_Request08Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request09")]
		public ISingleResult<Clientage> sp_Request09()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Clientage>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request10")]
		public ISingleResult<Clientage> sp_Request10()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Clientage>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request11")]
		public ISingleResult<Clientage> sp_Request11()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Clientage>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Request12")]
		public ISingleResult<Clientage> sp_Request12()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Clientage>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agents")]
	public partial class Agents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ASecondName;
		
		private string _AFirstName;
		
		private string _AMiddleName;
		
		private double _AReward;
		
		private System.Data.Linq.Binary _APhoto;
		
		private EntitySet<CanceledContracts> _CanceledContracts;
		
		private EntitySet<Contracts> _Contracts;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnASecondNameChanging(string value);
    partial void OnASecondNameChanged();
    partial void OnAFirstNameChanging(string value);
    partial void OnAFirstNameChanged();
    partial void OnAMiddleNameChanging(string value);
    partial void OnAMiddleNameChanged();
    partial void OnARewardChanging(double value);
    partial void OnARewardChanged();
    partial void OnAPhotoChanging(System.Data.Linq.Binary value);
    partial void OnAPhotoChanged();
    #endregion
		
		public Agents()
		{
			this._CanceledContracts = new EntitySet<CanceledContracts>(new Action<CanceledContracts>(this.attach_CanceledContracts), new Action<CanceledContracts>(this.detach_CanceledContracts));
			this._Contracts = new EntitySet<Contracts>(new Action<Contracts>(this.attach_Contracts), new Action<Contracts>(this.detach_Contracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASecondName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string ASecondName
		{
			get
			{
				return this._ASecondName;
			}
			set
			{
				if ((this._ASecondName != value))
				{
					this.OnASecondNameChanging(value);
					this.SendPropertyChanging();
					this._ASecondName = value;
					this.SendPropertyChanged("ASecondName");
					this.OnASecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AFirstName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string AFirstName
		{
			get
			{
				return this._AFirstName;
			}
			set
			{
				if ((this._AFirstName != value))
				{
					this.OnAFirstNameChanging(value);
					this.SendPropertyChanging();
					this._AFirstName = value;
					this.SendPropertyChanged("AFirstName");
					this.OnAFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMiddleName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string AMiddleName
		{
			get
			{
				return this._AMiddleName;
			}
			set
			{
				if ((this._AMiddleName != value))
				{
					this.OnAMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._AMiddleName = value;
					this.SendPropertyChanged("AMiddleName");
					this.OnAMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AReward", DbType="Float NOT NULL")]
		public double AReward
		{
			get
			{
				return this._AReward;
			}
			set
			{
				if ((this._AReward != value))
				{
					this.OnARewardChanging(value);
					this.SendPropertyChanging();
					this._AReward = value;
					this.SendPropertyChanged("AReward");
					this.OnARewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary APhoto
		{
			get
			{
				return this._APhoto;
			}
			set
			{
				if ((this._APhoto != value))
				{
					this.OnAPhotoChanging(value);
					this.SendPropertyChanging();
					this._APhoto = value;
					this.SendPropertyChanged("APhoto");
					this.OnAPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agents_CanceledContracts", Storage="_CanceledContracts", ThisKey="Id", OtherKey="IdAgent")]
		public EntitySet<CanceledContracts> CanceledContracts
		{
			get
			{
				return this._CanceledContracts;
			}
			set
			{
				this._CanceledContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agents_Contracts", Storage="_Contracts", ThisKey="Id", OtherKey="IdAgent")]
		public EntitySet<Contracts> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CanceledContracts(CanceledContracts entity)
		{
			this.SendPropertyChanging();
			entity.Agents = this;
		}
		
		private void detach_CanceledContracts(CanceledContracts entity)
		{
			this.SendPropertyChanging();
			entity.Agents = null;
		}
		
		private void attach_Contracts(Contracts entity)
		{
			this.SendPropertyChanging();
			entity.Agents = this;
		}
		
		private void detach_Contracts(Contracts entity)
		{
			this.SendPropertyChanging();
			entity.Agents = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CanceledContracts")]
	public partial class CanceledContracts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdClient;
		
		private int _IdAgent;
		
		private int _IdTypeInsurance;
		
		private decimal _SumInsurance;
		
		private System.DateTime _DateConclusion;
		
		private string _TerminationSign;
		
		private EntityRef<Agents> _Agents;
		
		private EntityRef<Clientage> _Clientage;
		
		private EntityRef<TypesInsurance> _TypesInsurance;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdClientChanging(int value);
    partial void OnIdClientChanged();
    partial void OnIdAgentChanging(int value);
    partial void OnIdAgentChanged();
    partial void OnIdTypeInsuranceChanging(int value);
    partial void OnIdTypeInsuranceChanged();
    partial void OnSumInsuranceChanging(decimal value);
    partial void OnSumInsuranceChanged();
    partial void OnDateConclusionChanging(System.DateTime value);
    partial void OnDateConclusionChanged();
    partial void OnTerminationSignChanging(string value);
    partial void OnTerminationSignChanged();
    #endregion
		
		public CanceledContracts()
		{
			this._Agents = default(EntityRef<Agents>);
			this._Clientage = default(EntityRef<Clientage>);
			this._TypesInsurance = default(EntityRef<TypesInsurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int NOT NULL")]
		public int IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._Clientage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAgent", DbType="Int NOT NULL")]
		public int IdAgent
		{
			get
			{
				return this._IdAgent;
			}
			set
			{
				if ((this._IdAgent != value))
				{
					if (this._Agents.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAgentChanging(value);
					this.SendPropertyChanging();
					this._IdAgent = value;
					this.SendPropertyChanged("IdAgent");
					this.OnIdAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeInsurance", DbType="Int NOT NULL")]
		public int IdTypeInsurance
		{
			get
			{
				return this._IdTypeInsurance;
			}
			set
			{
				if ((this._IdTypeInsurance != value))
				{
					if (this._TypesInsurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeInsuranceChanging(value);
					this.SendPropertyChanging();
					this._IdTypeInsurance = value;
					this.SendPropertyChanged("IdTypeInsurance");
					this.OnIdTypeInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumInsurance", DbType="Money NOT NULL")]
		public decimal SumInsurance
		{
			get
			{
				return this._SumInsurance;
			}
			set
			{
				if ((this._SumInsurance != value))
				{
					this.OnSumInsuranceChanging(value);
					this.SendPropertyChanging();
					this._SumInsurance = value;
					this.SendPropertyChanged("SumInsurance");
					this.OnSumInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConclusion", DbType="Date NOT NULL")]
		public System.DateTime DateConclusion
		{
			get
			{
				return this._DateConclusion;
			}
			set
			{
				if ((this._DateConclusion != value))
				{
					this.OnDateConclusionChanging(value);
					this.SendPropertyChanging();
					this._DateConclusion = value;
					this.SendPropertyChanged("DateConclusion");
					this.OnDateConclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminationSign", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TerminationSign
		{
			get
			{
				return this._TerminationSign;
			}
			set
			{
				if ((this._TerminationSign != value))
				{
					this.OnTerminationSignChanging(value);
					this.SendPropertyChanging();
					this._TerminationSign = value;
					this.SendPropertyChanged("TerminationSign");
					this.OnTerminationSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agents_CanceledContracts", Storage="_Agents", ThisKey="IdAgent", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Agents Agents
		{
			get
			{
				return this._Agents.Entity;
			}
			set
			{
				Agents previousValue = this._Agents.Entity;
				if (((previousValue != value) 
							|| (this._Agents.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agents.Entity = null;
						previousValue.CanceledContracts.Remove(this);
					}
					this._Agents.Entity = value;
					if ((value != null))
					{
						value.CanceledContracts.Add(this);
						this._IdAgent = value.Id;
					}
					else
					{
						this._IdAgent = default(int);
					}
					this.SendPropertyChanged("Agents");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientage_CanceledContracts", Storage="_Clientage", ThisKey="IdClient", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Clientage Clientage
		{
			get
			{
				return this._Clientage.Entity;
			}
			set
			{
				Clientage previousValue = this._Clientage.Entity;
				if (((previousValue != value) 
							|| (this._Clientage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientage.Entity = null;
						previousValue.CanceledContracts.Remove(this);
					}
					this._Clientage.Entity = value;
					if ((value != null))
					{
						value.CanceledContracts.Add(this);
						this._IdClient = value.Id;
					}
					else
					{
						this._IdClient = default(int);
					}
					this.SendPropertyChanged("Clientage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypesInsurance_CanceledContracts", Storage="_TypesInsurance", ThisKey="IdTypeInsurance", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TypesInsurance TypesInsurance
		{
			get
			{
				return this._TypesInsurance.Entity;
			}
			set
			{
				TypesInsurance previousValue = this._TypesInsurance.Entity;
				if (((previousValue != value) 
							|| (this._TypesInsurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypesInsurance.Entity = null;
						previousValue.CanceledContracts.Remove(this);
					}
					this._TypesInsurance.Entity = value;
					if ((value != null))
					{
						value.CanceledContracts.Add(this);
						this._IdTypeInsurance = value.Id;
					}
					else
					{
						this._IdTypeInsurance = default(int);
					}
					this.SendPropertyChanged("TypesInsurance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientage")]
	public partial class Clientage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CSecondName;
		
		private string _CFirstName;
		
		private string _CMiddleName;
		
		private string _CPassport;
		
		private double _CDiscount;
		
		private System.Data.Linq.Binary _CPhoto;
		
		private EntitySet<CanceledContracts> _CanceledContracts;
		
		private EntitySet<Contracts> _Contracts;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCSecondNameChanging(string value);
    partial void OnCSecondNameChanged();
    partial void OnCFirstNameChanging(string value);
    partial void OnCFirstNameChanged();
    partial void OnCMiddleNameChanging(string value);
    partial void OnCMiddleNameChanged();
    partial void OnCPassportChanging(string value);
    partial void OnCPassportChanged();
    partial void OnCDiscountChanging(double value);
    partial void OnCDiscountChanged();
    partial void OnCPhotoChanging(System.Data.Linq.Binary value);
    partial void OnCPhotoChanged();
    #endregion
		
		public Clientage()
		{
			this._CanceledContracts = new EntitySet<CanceledContracts>(new Action<CanceledContracts>(this.attach_CanceledContracts), new Action<CanceledContracts>(this.detach_CanceledContracts));
			this._Contracts = new EntitySet<Contracts>(new Action<Contracts>(this.attach_Contracts), new Action<Contracts>(this.detach_Contracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSecondName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CSecondName
		{
			get
			{
				return this._CSecondName;
			}
			set
			{
				if ((this._CSecondName != value))
				{
					this.OnCSecondNameChanging(value);
					this.SendPropertyChanging();
					this._CSecondName = value;
					this.SendPropertyChanged("CSecondName");
					this.OnCSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFirstName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CFirstName
		{
			get
			{
				return this._CFirstName;
			}
			set
			{
				if ((this._CFirstName != value))
				{
					this.OnCFirstNameChanging(value);
					this.SendPropertyChanging();
					this._CFirstName = value;
					this.SendPropertyChanged("CFirstName");
					this.OnCFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMiddleName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CMiddleName
		{
			get
			{
				return this._CMiddleName;
			}
			set
			{
				if ((this._CMiddleName != value))
				{
					this.OnCMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._CMiddleName = value;
					this.SendPropertyChanged("CMiddleName");
					this.OnCMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPassport", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CPassport
		{
			get
			{
				return this._CPassport;
			}
			set
			{
				if ((this._CPassport != value))
				{
					this.OnCPassportChanging(value);
					this.SendPropertyChanging();
					this._CPassport = value;
					this.SendPropertyChanged("CPassport");
					this.OnCPassportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDiscount", DbType="Float NOT NULL")]
		public double CDiscount
		{
			get
			{
				return this._CDiscount;
			}
			set
			{
				if ((this._CDiscount != value))
				{
					this.OnCDiscountChanging(value);
					this.SendPropertyChanging();
					this._CDiscount = value;
					this.SendPropertyChanged("CDiscount");
					this.OnCDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CPhoto
		{
			get
			{
				return this._CPhoto;
			}
			set
			{
				if ((this._CPhoto != value))
				{
					this.OnCPhotoChanging(value);
					this.SendPropertyChanging();
					this._CPhoto = value;
					this.SendPropertyChanged("CPhoto");
					this.OnCPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientage_CanceledContracts", Storage="_CanceledContracts", ThisKey="Id", OtherKey="IdClient")]
		public EntitySet<CanceledContracts> CanceledContracts
		{
			get
			{
				return this._CanceledContracts;
			}
			set
			{
				this._CanceledContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientage_Contracts", Storage="_Contracts", ThisKey="Id", OtherKey="IdClient")]
		public EntitySet<Contracts> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CanceledContracts(CanceledContracts entity)
		{
			this.SendPropertyChanging();
			entity.Clientage = this;
		}
		
		private void detach_CanceledContracts(CanceledContracts entity)
		{
			this.SendPropertyChanging();
			entity.Clientage = null;
		}
		
		private void attach_Contracts(Contracts entity)
		{
			this.SendPropertyChanging();
			entity.Clientage = this;
		}
		
		private void detach_Contracts(Contracts entity)
		{
			this.SendPropertyChanging();
			entity.Clientage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contracts")]
	public partial class Contracts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdClient;
		
		private int _IdAgent;
		
		private int _IdTypeInsurance;
		
		private decimal _SumInsurance;
		
		private System.DateTime _DateConclusion;
		
		private EntityRef<Agents> _Agents;
		
		private EntityRef<Clientage> _Clientage;
		
		private EntityRef<TypesInsurance> _TypesInsurance;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdClientChanging(int value);
    partial void OnIdClientChanged();
    partial void OnIdAgentChanging(int value);
    partial void OnIdAgentChanged();
    partial void OnIdTypeInsuranceChanging(int value);
    partial void OnIdTypeInsuranceChanged();
    partial void OnSumInsuranceChanging(decimal value);
    partial void OnSumInsuranceChanged();
    partial void OnDateConclusionChanging(System.DateTime value);
    partial void OnDateConclusionChanged();
    #endregion
		
		public Contracts()
		{
			this._Agents = default(EntityRef<Agents>);
			this._Clientage = default(EntityRef<Clientage>);
			this._TypesInsurance = default(EntityRef<TypesInsurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int NOT NULL")]
		public int IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._Clientage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAgent", DbType="Int NOT NULL")]
		public int IdAgent
		{
			get
			{
				return this._IdAgent;
			}
			set
			{
				if ((this._IdAgent != value))
				{
					if (this._Agents.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAgentChanging(value);
					this.SendPropertyChanging();
					this._IdAgent = value;
					this.SendPropertyChanged("IdAgent");
					this.OnIdAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeInsurance", DbType="Int NOT NULL")]
		public int IdTypeInsurance
		{
			get
			{
				return this._IdTypeInsurance;
			}
			set
			{
				if ((this._IdTypeInsurance != value))
				{
					if (this._TypesInsurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeInsuranceChanging(value);
					this.SendPropertyChanging();
					this._IdTypeInsurance = value;
					this.SendPropertyChanged("IdTypeInsurance");
					this.OnIdTypeInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumInsurance", DbType="Money NOT NULL")]
		public decimal SumInsurance
		{
			get
			{
				return this._SumInsurance;
			}
			set
			{
				if ((this._SumInsurance != value))
				{
					this.OnSumInsuranceChanging(value);
					this.SendPropertyChanging();
					this._SumInsurance = value;
					this.SendPropertyChanged("SumInsurance");
					this.OnSumInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConclusion", DbType="Date NOT NULL")]
		public System.DateTime DateConclusion
		{
			get
			{
				return this._DateConclusion;
			}
			set
			{
				if ((this._DateConclusion != value))
				{
					this.OnDateConclusionChanging(value);
					this.SendPropertyChanging();
					this._DateConclusion = value;
					this.SendPropertyChanged("DateConclusion");
					this.OnDateConclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agents_Contracts", Storage="_Agents", ThisKey="IdAgent", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Agents Agents
		{
			get
			{
				return this._Agents.Entity;
			}
			set
			{
				Agents previousValue = this._Agents.Entity;
				if (((previousValue != value) 
							|| (this._Agents.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agents.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Agents.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._IdAgent = value.Id;
					}
					else
					{
						this._IdAgent = default(int);
					}
					this.SendPropertyChanged("Agents");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientage_Contracts", Storage="_Clientage", ThisKey="IdClient", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Clientage Clientage
		{
			get
			{
				return this._Clientage.Entity;
			}
			set
			{
				Clientage previousValue = this._Clientage.Entity;
				if (((previousValue != value) 
							|| (this._Clientage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientage.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Clientage.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._IdClient = value.Id;
					}
					else
					{
						this._IdClient = default(int);
					}
					this.SendPropertyChanged("Clientage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypesInsurance_Contracts", Storage="_TypesInsurance", ThisKey="IdTypeInsurance", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TypesInsurance TypesInsurance
		{
			get
			{
				return this._TypesInsurance.Entity;
			}
			set
			{
				TypesInsurance previousValue = this._TypesInsurance.Entity;
				if (((previousValue != value) 
							|| (this._TypesInsurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypesInsurance.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._TypesInsurance.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._IdTypeInsurance = value.Id;
					}
					else
					{
						this._IdTypeInsurance = default(int);
					}
					this.SendPropertyChanged("TypesInsurance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractsLog")]
	public partial class ContractsLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Msg;
		
		private System.DateTime _DateOperation;
		
		private string _KindOperation;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMsgChanging(string value);
    partial void OnMsgChanged();
    partial void OnDateOperationChanging(System.DateTime value);
    partial void OnDateOperationChanged();
    partial void OnKindOperationChanging(string value);
    partial void OnKindOperationChanged();
    #endregion
		
		public ContractsLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msg", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Msg
		{
			get
			{
				return this._Msg;
			}
			set
			{
				if ((this._Msg != value))
				{
					this.OnMsgChanging(value);
					this.SendPropertyChanging();
					this._Msg = value;
					this.SendPropertyChanged("Msg");
					this.OnMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOperation", DbType="DateTime NOT NULL")]
		public System.DateTime DateOperation
		{
			get
			{
				return this._DateOperation;
			}
			set
			{
				if ((this._DateOperation != value))
				{
					this.OnDateOperationChanging(value);
					this.SendPropertyChanging();
					this._DateOperation = value;
					this.SendPropertyChanged("DateOperation");
					this.OnDateOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindOperation", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string KindOperation
		{
			get
			{
				return this._KindOperation;
			}
			set
			{
				if ((this._KindOperation != value))
				{
					this.OnKindOperationChanging(value);
					this.SendPropertyChanging();
					this._KindOperation = value;
					this.SendPropertyChanged("KindOperation");
					this.OnKindOperationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypesInsurance")]
	public partial class TypesInsurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private double _Tariff;
		
		private EntitySet<CanceledContracts> _CanceledContracts;
		
		private EntitySet<Contracts> _Contracts;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTariffChanging(double value);
    partial void OnTariffChanged();
    #endregion
		
		public TypesInsurance()
		{
			this._CanceledContracts = new EntitySet<CanceledContracts>(new Action<CanceledContracts>(this.attach_CanceledContracts), new Action<CanceledContracts>(this.detach_CanceledContracts));
			this._Contracts = new EntitySet<Contracts>(new Action<Contracts>(this.attach_Contracts), new Action<Contracts>(this.detach_Contracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tariff", DbType="Float NOT NULL")]
		public double Tariff
		{
			get
			{
				return this._Tariff;
			}
			set
			{
				if ((this._Tariff != value))
				{
					this.OnTariffChanging(value);
					this.SendPropertyChanging();
					this._Tariff = value;
					this.SendPropertyChanged("Tariff");
					this.OnTariffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypesInsurance_CanceledContracts", Storage="_CanceledContracts", ThisKey="Id", OtherKey="IdTypeInsurance")]
		public EntitySet<CanceledContracts> CanceledContracts
		{
			get
			{
				return this._CanceledContracts;
			}
			set
			{
				this._CanceledContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypesInsurance_Contracts", Storage="_Contracts", ThisKey="Id", OtherKey="IdTypeInsurance")]
		public EntitySet<Contracts> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CanceledContracts(CanceledContracts entity)
		{
			this.SendPropertyChanging();
			entity.TypesInsurance = this;
		}
		
		private void detach_CanceledContracts(CanceledContracts entity)
		{
			this.SendPropertyChanging();
			entity.TypesInsurance = null;
		}
		
		private void attach_Contracts(Contracts entity)
		{
			this.SendPropertyChanging();
			entity.TypesInsurance = this;
		}
		
		private void detach_Contracts(Contracts entity)
		{
			this.SendPropertyChanging();
			entity.TypesInsurance = null;
		}
	}
	
	public partial class sp_Request02Result
	{
		
		private System.DateTime _DateConclusion;
		
		private decimal _SumInsurance;
		
		private string _Type;
		
		private double _Tariff;
		
		private string _ClientNames;
		
		private string _CPassport;
		
		private double _CDiscount;
		
		private System.Data.Linq.Binary _CPhoto;
		
		private string _AgentNames;
		
		private double _AReward;
		
		private System.Data.Linq.Binary _APhoto;
		
		public sp_Request02Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConclusion", DbType="Date NOT NULL")]
		public System.DateTime DateConclusion
		{
			get
			{
				return this._DateConclusion;
			}
			set
			{
				if ((this._DateConclusion != value))
				{
					this._DateConclusion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumInsurance", DbType="Money NOT NULL")]
		public decimal SumInsurance
		{
			get
			{
				return this._SumInsurance;
			}
			set
			{
				if ((this._SumInsurance != value))
				{
					this._SumInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tariff", DbType="Float NOT NULL")]
		public double Tariff
		{
			get
			{
				return this._Tariff;
			}
			set
			{
				if ((this._Tariff != value))
				{
					this._Tariff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientNames", DbType="NVarChar(66)")]
		public string ClientNames
		{
			get
			{
				return this._ClientNames;
			}
			set
			{
				if ((this._ClientNames != value))
				{
					this._ClientNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPassport", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CPassport
		{
			get
			{
				return this._CPassport;
			}
			set
			{
				if ((this._CPassport != value))
				{
					this._CPassport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDiscount", DbType="Float NOT NULL")]
		public double CDiscount
		{
			get
			{
				return this._CDiscount;
			}
			set
			{
				if ((this._CDiscount != value))
				{
					this._CDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPhoto", DbType="Image")]
		public System.Data.Linq.Binary CPhoto
		{
			get
			{
				return this._CPhoto;
			}
			set
			{
				if ((this._CPhoto != value))
				{
					this._CPhoto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentNames", DbType="NVarChar(66)")]
		public string AgentNames
		{
			get
			{
				return this._AgentNames;
			}
			set
			{
				if ((this._AgentNames != value))
				{
					this._AgentNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AReward", DbType="Float NOT NULL")]
		public double AReward
		{
			get
			{
				return this._AReward;
			}
			set
			{
				if ((this._AReward != value))
				{
					this._AReward = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APhoto", DbType="Image")]
		public System.Data.Linq.Binary APhoto
		{
			get
			{
				return this._APhoto;
			}
			set
			{
				if ((this._APhoto != value))
				{
					this._APhoto = value;
				}
			}
		}
	}
	
	public partial class sp_Request03Result
	{
		
		private string _CSecondName;
		
		private string _CFirstName;
		
		private string _CMiddleName;
		
		private string _CPassport;
		
		private double _CDiscount;
		
		private System.Data.Linq.Binary _CPhoto;
		
		private decimal _SumInsurance;
		
		private System.DateTime _DateConclusion;
		
		public sp_Request03Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSecondName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CSecondName
		{
			get
			{
				return this._CSecondName;
			}
			set
			{
				if ((this._CSecondName != value))
				{
					this._CSecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFirstName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CFirstName
		{
			get
			{
				return this._CFirstName;
			}
			set
			{
				if ((this._CFirstName != value))
				{
					this._CFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMiddleName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CMiddleName
		{
			get
			{
				return this._CMiddleName;
			}
			set
			{
				if ((this._CMiddleName != value))
				{
					this._CMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPassport", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CPassport
		{
			get
			{
				return this._CPassport;
			}
			set
			{
				if ((this._CPassport != value))
				{
					this._CPassport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDiscount", DbType="Float NOT NULL")]
		public double CDiscount
		{
			get
			{
				return this._CDiscount;
			}
			set
			{
				if ((this._CDiscount != value))
				{
					this._CDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPhoto", DbType="Image")]
		public System.Data.Linq.Binary CPhoto
		{
			get
			{
				return this._CPhoto;
			}
			set
			{
				if ((this._CPhoto != value))
				{
					this._CPhoto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumInsurance", DbType="Money NOT NULL")]
		public decimal SumInsurance
		{
			get
			{
				return this._SumInsurance;
			}
			set
			{
				if ((this._SumInsurance != value))
				{
					this._SumInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConclusion", DbType="Date NOT NULL")]
		public System.DateTime DateConclusion
		{
			get
			{
				return this._DateConclusion;
			}
			set
			{
				if ((this._DateConclusion != value))
				{
					this._DateConclusion = value;
				}
			}
		}
	}
	
	public partial class sp_Request04Result
	{
		
		private int _Id;
		
		private string _CSecondName;
		
		private string _CFirstName;
		
		private string _CMiddleName;
		
		private string _CPassport;
		
		private double _CDiscount;
		
		private System.Data.Linq.Binary _CPhoto;
		
		public sp_Request04Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSecondName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CSecondName
		{
			get
			{
				return this._CSecondName;
			}
			set
			{
				if ((this._CSecondName != value))
				{
					this._CSecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFirstName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CFirstName
		{
			get
			{
				return this._CFirstName;
			}
			set
			{
				if ((this._CFirstName != value))
				{
					this._CFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMiddleName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string CMiddleName
		{
			get
			{
				return this._CMiddleName;
			}
			set
			{
				if ((this._CMiddleName != value))
				{
					this._CMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPassport", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CPassport
		{
			get
			{
				return this._CPassport;
			}
			set
			{
				if ((this._CPassport != value))
				{
					this._CPassport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDiscount", DbType="Float NOT NULL")]
		public double CDiscount
		{
			get
			{
				return this._CDiscount;
			}
			set
			{
				if ((this._CDiscount != value))
				{
					this._CDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPhoto", DbType="Image")]
		public System.Data.Linq.Binary CPhoto
		{
			get
			{
				return this._CPhoto;
			}
			set
			{
				if ((this._CPhoto != value))
				{
					this._CPhoto = value;
				}
			}
		}
	}
	
	public partial class sp_Request05Result
	{
		
		private string _ClientNames;
		
		private string _Type;
		
		private decimal _SumInsurance;
		
		private System.DateTime _DateConclusion;
		
		private string _AgentNames;
		
		public sp_Request05Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientNames", DbType="NVarChar(66)")]
		public string ClientNames
		{
			get
			{
				return this._ClientNames;
			}
			set
			{
				if ((this._ClientNames != value))
				{
					this._ClientNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumInsurance", DbType="Money NOT NULL")]
		public decimal SumInsurance
		{
			get
			{
				return this._SumInsurance;
			}
			set
			{
				if ((this._SumInsurance != value))
				{
					this._SumInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConclusion", DbType="Date NOT NULL")]
		public System.DateTime DateConclusion
		{
			get
			{
				return this._DateConclusion;
			}
			set
			{
				if ((this._DateConclusion != value))
				{
					this._DateConclusion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentNames", DbType="NVarChar(66)")]
		public string AgentNames
		{
			get
			{
				return this._AgentNames;
			}
			set
			{
				if ((this._AgentNames != value))
				{
					this._AgentNames = value;
				}
			}
		}
	}
	
	public partial class sp_Request06Result
	{
		
		private System.DateTime _DateConclusion;
		
		private string _ASecondName;
		
		private string _AFirstName;
		
		private string _AMiddleName;
		
		private decimal _SumInsurance;
		
		private System.Nullable<decimal> _Commission;
		
		public sp_Request06Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConclusion", DbType="Date NOT NULL")]
		public System.DateTime DateConclusion
		{
			get
			{
				return this._DateConclusion;
			}
			set
			{
				if ((this._DateConclusion != value))
				{
					this._DateConclusion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASecondName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string ASecondName
		{
			get
			{
				return this._ASecondName;
			}
			set
			{
				if ((this._ASecondName != value))
				{
					this._ASecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AFirstName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string AFirstName
		{
			get
			{
				return this._AFirstName;
			}
			set
			{
				if ((this._AFirstName != value))
				{
					this._AFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMiddleName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string AMiddleName
		{
			get
			{
				return this._AMiddleName;
			}
			set
			{
				if ((this._AMiddleName != value))
				{
					this._AMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumInsurance", DbType="Money NOT NULL")]
		public decimal SumInsurance
		{
			get
			{
				return this._SumInsurance;
			}
			set
			{
				if ((this._SumInsurance != value))
				{
					this._SumInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commission", DbType="Money")]
		public System.Nullable<decimal> Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this._Commission = value;
				}
			}
		}
	}
	
	public partial class sp_Request07Result
	{
		
		private System.Nullable<decimal> _MaxSumInsurance;
		
		private System.Nullable<decimal> _MinSumInsurance;
		
		private System.Nullable<int> _CountSums;
		
		public sp_Request07Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSumInsurance", DbType="Money")]
		public System.Nullable<decimal> MaxSumInsurance
		{
			get
			{
				return this._MaxSumInsurance;
			}
			set
			{
				if ((this._MaxSumInsurance != value))
				{
					this._MaxSumInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSumInsurance", DbType="Money")]
		public System.Nullable<decimal> MinSumInsurance
		{
			get
			{
				return this._MinSumInsurance;
			}
			set
			{
				if ((this._MinSumInsurance != value))
				{
					this._MinSumInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountSums", DbType="Int")]
		public System.Nullable<int> CountSums
		{
			get
			{
				return this._CountSums;
			}
			set
			{
				if ((this._CountSums != value))
				{
					this._CountSums = value;
				}
			}
		}
	}
	
	public partial class sp_Request08Result
	{
		
		private System.Nullable<decimal> _AvgSumInsurance;
		
		public sp_Request08Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgSumInsurance", DbType="Money")]
		public System.Nullable<decimal> AvgSumInsurance
		{
			get
			{
				return this._AvgSumInsurance;
			}
			set
			{
				if ((this._AvgSumInsurance != value))
				{
					this._AvgSumInsurance = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
